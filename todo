*** Engine ***

***************

** Time Series Analysis **
- pass the order in ARIMA as parameters (as non required)
**************************


- fill setups.py
**************


*** Service ***
***************


*** UI - Swing ***
- Find a way to create an abstract view (Configuration (abstract), Applier (abstract))
=> so we don't have to create the same frame multiple times (we add the applier needed and the configuration needed)
and the code that handle the screen is shared.
- rearrange the way tryPopup => message and title and stack ?
- rework ui => refactor write tests
- maybe call the forecast / predict in another thread and update the screen in another thread. ? (but what if they launch multiple request ? )
    => grey the other buttons?

**********

*** UI - Web using Angular ***
- Write unit test for
  - validation-message-generator
  - time-series-analysis-input.component
  - time-series-analysis-output.component
- Final Step make the application a web application as well.
// TODO for TimeSeriesAnalysisInput:
//  Work on exception message for each input (required message or number can't be negative, or date format not matched)
//  Put tooltip for dateformat to show all possible date formats (already one in swing-ui)
- refactor form make Angular more readable and follow best practices
- find a way to pass server port to angular instead of being hard coded in the service.ts
- Complete Time Series Analysis Output Component
****************


*** Model ***
*************



**todo**
- Test end to end with values that are different by year/ month/ day/ hour/ minute/ second/
- Create yml (swagger) file to explain all resources of all components.
- Move all todos to clickup app and create a board
- Make packaging.py fail if one of the commands fail (i.e.: if tests fail stop packaging)
*******
