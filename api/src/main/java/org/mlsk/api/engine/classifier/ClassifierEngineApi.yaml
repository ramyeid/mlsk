openapi: "3.0.0"
info:
  version: "1.0"
  title: MLSK - Classifier - Engine
  description: This is the API detailing all endpoints
    of the Machine Learning Swiss Knife, Classifier, Engine side.
    All classifier will have a single api on the engine side to simplify the orchestrator (JAVA) side.
    The classifier type will be propagated to each endpoint via ClassifierType enum
    The Service is written in PYTHON
tags:
  - name: ClassifierEngine
paths:
  '/classifier/start':
    post:
      tags:
        - ClassifierEngine
      summary: Classifier Start Request
      operationId: start
      description: Notify Engine that a classifier algorithm will be launched
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/ClassifierStartRequest.yaml#/definitions/ClassifierStartRequestModel'
      responses:
        '200':
          description: Returns OK, data has been set.
        '500':
          description: Engine Computation Exception with detailed exception message.
  '/classifier/data':
    post:
      tags:
        - ClassifierEngine
      summary: Classifier Data Request
      operationId: data
      description: Incrementally send the data of the current classifier data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/ClassifierDataRequest.yaml#/definitions/ClassifierDataRequestModel'
      responses:
        '200':
          description: Returns Ok, data has been set.
        '500':
          description: Engine Computation Exception with detailed exception message.
  '/classifier/predict':
    post:
      tags:
        - ClassifierEngine
      summary: Classifier Predict
      operationId: predict
      description: Predict the values with Classifier algorithm.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/ClassifierRequest.yaml#/definitions/ClassifierRequestModel'
      responses:
        '200':
          description: Returns the predicted values.
          content:
            application/json:
              schema:
                $ref: 'model/ClassifierResponse.yaml#/definitions/ClassifierResponseModel'
        '500':
          description: Engine Computation Exception with detailed exception message.
  '/classifier/predict-accuracy':
    post:
      tags:
        - ClassifierEngine
      summary: Classifier Predict Accuracy
      operationId: computePredictAccuracy
      description: |
        Compute Predict Accuracy with Classifier Algorithm using the last {numberOfValues}.
        Predict the last {numberOfValues} and compare to actual data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/ClassifierRequest.yaml#/definitions/ClassifierRequestModel'
      responses:
        '200':
          description: Returns the accuracy of the predict algorithm.
          content:
            application/json:
              schema:
                type: number
        '500':
          description: Engine Computation Exception with detailed exception message.
  '/classifier/cancel':
    post:
      tags:
        - ClassifierEngine
      summary: Classifier Cancel Request
      operationId: cancel
      description: |
        Cancel any request data currently on the engine - Clears state.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/ClassifierCancelRequest.yaml#/definitions/ClassifierCancelRequestModel'
      responses:
        '200':
          description: Returns Ok, data has been cleared.
        '500':
          description: Engine Computation Exception with detailed exception message.