<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>machine-learning-swissknife</groupId>
        <artifactId>mlsk</artifactId>
        <version>1.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>mlsk-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jcl</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.6.0</version>
                <configuration>
                    <output>${basedir}/target/generated-sources</output>
                    <generateApis>true</generateApis>
                    <generateApiTests>false</generateApiTests>
                    <generateApiDocumentation>false</generateApiDocumentation>

                    <configOptions>
                        <openApiNullable>false</openApiNullable>
                        <useOptional>true</useOptional>
                        <java8>true</java8>
                        <skipDefaultInterface>true</skipDefaultInterface>
                        <sourceFolder>src/main/java</sourceFolder>
                        <useBeanValidation>false</useBeanValidation>
                        <interfaceOnly>true</interfaceOnly>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>time-series-analysis-service-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Using spring generator, since it will generate constructor with required parameters -->
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.timeseries.model</modelPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/timeseries/TimeSeriesAnalysisServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>time-series-analysis-service-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.timeseries.model</modelPackage>
                            <apiPackage>org.mlsk.api.service.timeseries.api</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/timeseries/TimeSeriesAnalysisServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>time-series-analysis-service-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <library>resttemplate</library>
                            <generatorName>java</generatorName>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.timeseries.model</modelPackage>
                            <invokerPackage>org.mlsk.api.service.timeseries.client</invokerPackage>
                            <apiPackage>org.mlsk.api.service.timeseries.client</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/timeseries/TimeSeriesAnalysisServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>time-series-analysis-engine-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Using spring generator, since it will generate constructor with required parameters -->
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.engine.timeseries.model</modelPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/engine/timeseries/TimeSeriesAnalysisEngineApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>time-series-analysis-engine-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <library>resttemplate</library>
                            <generatorName>java</generatorName>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.engine.timeseries.model</modelPackage>
                            <invokerPackage>org.mlsk.api.engine.timeseries.client</invokerPackage>
                            <apiPackage>org.mlsk.api.engine.timeseries.client</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/engine/timeseries/TimeSeriesAnalysisEngineApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decision-tree-service-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Using spring generator, since it will generate constructor with required parameters -->
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.classifier.model</modelPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/classifier/decisiontree/DecisionTreeServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decision-tree-service-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.classifier.model</modelPackage>
                            <apiPackage>org.mlsk.api.service.classifier.decisiontree.api</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/classifier/decisiontree/DecisionTreeServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decision-tree-service-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <library>resttemplate</library>
                            <generatorName>java</generatorName>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.service.classifier.model</modelPackage>
                            <invokerPackage>org.mlsk.api.service.classifier.decisiontree.client</invokerPackage>
                            <apiPackage>org.mlsk.api.service.classifier.decisiontree.client</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/service/classifier/decisiontree/DecisionTreeServiceApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decision-tree-engine-model</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Using spring generator, since it will generate constructor with required parameters -->
                            <generatorName>spring</generatorName>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.engine.classifier.model</modelPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/engine/classifier/decisiontree/DecisionTreeEngineApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decision-tree-engine-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <library>resttemplate</library>
                            <generatorName>java</generatorName>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <generateModels>false</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <modelPackage>org.mlsk.api.engine.classifier.model</modelPackage>
                            <invokerPackage>org.mlsk.api.engine.classifier.decisiontree.client</invokerPackage>
                            <apiPackage>org.mlsk.api.engine.classifier.decisiontree.client</apiPackage>

                            <inputSpec>
                                ${basedir}/src/main/java/org/mlsk/api/engine/classifier/decisiontree/DecisionTreeEngineApi.yaml
                            </inputSpec>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>