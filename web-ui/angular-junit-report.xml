<?xml version="1.0"?>
<testsuite name="Chrome Headless 92.0.4515.159 (Mac OS 10.15.7)" package="" timestamp="2021-08-29T14:59:48" id="0" hostname="Ramys-MacBook-Pro.local" tests="85" errors="0" failures="0" time="0.786">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/92.0.4515.159 Safari/537.36"/>
  </properties>
  <testcase name="HomeComponent should render page with correct information" time="0.035" classname="HomeComponent"/>
  <testcase name="ValidationMessageGenerator should not return any error if forms were not modified" time="0.003" classname="ValidationMessageGenerator"/>
  <testcase name="ValidationMessageGenerator should return errors according to form errors and validation message" time="0" classname="ValidationMessageGenerator"/>
  <testcase name="ValidationMessageGenerator should not return any error if forms were not modified but contain errors" time="0" classname="ValidationMessageGenerator"/>
  <testcase name="ValidationMessageGenerator should return errors according to forms error" time="0.001" classname="ValidationMessageGenerator"/>
  <testcase name="CsvReaderService should correctly parse file" time="0.002" classname="CsvReaderService"/>
  <testcase name="CsvReaderService should throw exception if invalid content" time="0.001" classname="CsvReaderService"/>
  <testcase name="CsvReaderService should throw exception if invalid value lines" time="0.003" classname="CsvReaderService"/>
  <testcase name="CsvReaderService should throw exception if column one does not match the file" time="0.002" classname="CsvReaderService"/>
  <testcase name="CsvReaderService should throw exception if column two does not match the file" time="0.001" classname="CsvReaderService"/>
  <testcase name="TimeSeriesRequestBuilderService should map result from csv reader service to time series analysis request" time="0.003" classname="TimeSeriesRequestBuilderService"/>
  <testcase name="TimeSeriesRequestBuilderService should forward error from csv reader service" time="0.002" classname="TimeSeriesRequestBuilderService"/>
  <testcase name="AppComponent should have as machine-learning-swissknife title" time="0.014" classname="AppComponent"/>
  <testcase name="TimeSeriesAnalysisService Forecast vs Actual should handle error of type error event from http post forecast vs actual" time="0.006" classname="TimeSeriesAnalysisService Forecast vs Actual"/>
  <testcase name="TimeSeriesAnalysisService Forecast vs Actual should return result from http post forecast vs actual" time="0.005" classname="TimeSeriesAnalysisService Forecast vs Actual"/>
  <testcase name="TimeSeriesAnalysisService Compute Forecat Accuracy should return result from http post compute forecast accuracy" time="0.003" classname="TimeSeriesAnalysisService Compute Forecat Accuracy"/>
  <testcase name="TimeSeriesAnalysisService Compute Forecat Accuracy should handle error of type error event from http post compute forecast accuracy" time="0.004" classname="TimeSeriesAnalysisService Compute Forecat Accuracy"/>
  <testcase name="TimeSeriesAnalysisService Forecast should return result from http post forecast" time="0.004" classname="TimeSeriesAnalysisService Forecast"/>
  <testcase name="TimeSeriesAnalysisService Forecast should handle error of type error event from http post forecast" time="0.003" classname="TimeSeriesAnalysisService Forecast"/>
  <testcase name="TimeSeriesAnalysisService Predict should return result from http post predict" time="0.003" classname="TimeSeriesAnalysisService Predict"/>
  <testcase name="TimeSeriesAnalysisService Predict should handle error of type error event from http post predict" time="0.002" classname="TimeSeriesAnalysisService Predict"/>
  <testcase name="ChartOptions should build default chart options" time="0.001" classname="ChartOptions"/>
  <testcase name="TimeSeriesAnalysisOutputComponent NewRequest should reset chart options, chart lines and display on new request after forecast accuracy result" time="0.019" classname="TimeSeriesAnalysisOutputComponent NewRequest"/>
  <testcase name="TimeSeriesAnalysisOutputComponent NewRequest should reset chart options, chart lines and display on new request after time series result" time="0.006" classname="TimeSeriesAnalysisOutputComponent NewRequest"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page without chart and accuracy on load" time="0.007" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page without chart and accuracy when only request is received" time="0.005" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page without chart when request and result received and new request" time="0.081" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page without accuracy when request and result received and new request" time="0.007" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page with accuracy when request and forecast accuracy result are received" time="0.006" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent Component Rendering should render page with chart when request and time series result are received" time="0.041" classname="TimeSeriesAnalysisOutputComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult should build chart lines when request and time series result are received" time="0.006" classname="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult"/>
  <testcase name="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult should not set display to true when only request is received" time="0.007" classname="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult"/>
  <testcase name="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult should set forecast accuracy when request and forecast accuracy result are received" time="0.005" classname="TimeSeriesAnalysisOutputComponent TimeSeriesResult &amp; AccuracyResult"/>
  <testcase name="TimeSeriesAnalysisComponent Input Emitter should call output on time series result" time="0.008" classname="TimeSeriesAnalysisComponent Input Emitter"/>
  <testcase name="TimeSeriesAnalysisComponent Input Emitter should call output on accuracy result" time="0.004" classname="TimeSeriesAnalysisComponent Input Emitter"/>
  <testcase name="TimeSeriesAnalysisComponent Input Emitter should call output on new request" time="0.003" classname="TimeSeriesAnalysisComponent Input Emitter"/>
  <testcase name="TimeSeriesAnalysisComponent Component Rendering should link to time series analysis input and output" time="0.004" classname="TimeSeriesAnalysisComponent Component Rendering"/>
  <testcase name="TimeSeriesAnalysisValidationMessages should build correct validation messages" time="0.001" classname="TimeSeriesAnalysisValidationMessages"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission should call service and set error message on forecast vs actual failure" time="0.056" classname="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission should reset error message on forecast vs actual after first forecast vs actual fail" time="0.019" classname="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission should call service and output result on forecast vs actual success" time="0.019" classname="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission should set error message on build time series analysis request failure" time="0.017" classname="TimeSeriesAnalysisInputComponent Forecast Vs Actual Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Predict Submission should set error message on build time series analysis request failure" time="0.02" classname="TimeSeriesAnalysisInputComponent Predict Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Predict Submission should reset error message on predict after first predict fail" time="0.017" classname="TimeSeriesAnalysisInputComponent Predict Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Predict Submission should call service and output result on predict success" time="0.017" classname="TimeSeriesAnalysisInputComponent Predict Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Predict Submission should call service and set error message on predict failure" time="0.016" classname="TimeSeriesAnalysisInputComponent Predict Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Submission should call service and set error message on forecast failure" time="0.019" classname="TimeSeriesAnalysisInputComponent Forecast Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Submission should set error message on build time series analysis request failure" time="0.016" classname="TimeSeriesAnalysisInputComponent Forecast Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Submission should reset error message on forecast after first forecast fail" time="0.016" classname="TimeSeriesAnalysisInputComponent Forecast Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Forecast Submission should call service and output result on forecast success" time="0.017" classname="TimeSeriesAnalysisInputComponent Forecast Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if date format form is empty" time="0.017" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if date format form is invalid" time="0.016" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if value column name form is empty" time="0.017" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if form is empty" time="0.017" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if date column name form is empty" time="0.015" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if number of values form is invalid" time="0.016" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should enable button and set form as value if all forms are valid" time="0.017" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if csv location form is empty" time="0.016" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Input Validation should disable button and set form as invalid if number of values form is empty" time="0.017" classname="TimeSeriesAnalysisInputComponent Input Validation"/>
  <testcase name="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission should call service and set error message on compute forecast accuracy failure" time="0.017" classname="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission should reset error message on compute forecast accuracy after first compute forecast accuracy fail" time="0.016" classname="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission should call service and output result on compute forecast accuracy success" time="0.015" classname="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission"/>
  <testcase name="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission should set error message on build time series analysis request failure" time="0.017" classname="TimeSeriesAnalysisInputComponent Compute Forecast Accuracy Submission"/>
  <testcase name="LineHelper should connect target to end coordinate of source if first coordinate of target is not in source with numbers" time="0.001" classname="LineHelper"/>
  <testcase name="LineHelper should connect target to coordinate of source if first coordinate of target is in source with dates" time="0.002" classname="LineHelper"/>
  <testcase name="LineHelper should connect target to end coordinate of source if first coordinate of target is not in source with dates" time="0" classname="LineHelper"/>
  <testcase name="LineHelper should connect target to coordinate of source if first coordinate of target is in source with numbers" time="0" classname="LineHelper"/>
  <testcase name="ValidationMessages getError should push and find validation message for form with min" time="0" classname="ValidationMessages getError"/>
  <testcase name="ValidationMessages getError should push and find validation message for form with required" time="0" classname="ValidationMessages getError"/>
  <testcase name="ValidationMessages getError should return undefined if error not available" time="0" classname="ValidationMessages getError"/>
  <testcase name="ValidationMessages getError should return undefined if form not available" time="0" classname="ValidationMessages getError"/>
  <testcase name="ValidationMessages getError should push and find validation message for form with invalid" time="0.001" classname="ValidationMessages getError"/>
  <testcase name="ValidationMessages push should not add form if already exists" time="0" classname="ValidationMessages push"/>
  <testcase name="ValidationMessages hasError should return true if contains form and error" time="0.001" classname="ValidationMessages hasError"/>
  <testcase name="ValidationMessages hasError should return false if does not contain form" time="0.002" classname="ValidationMessages hasError"/>
  <testcase name="ValidationMessages hasError should return false if does not contain error" time="0.001" classname="ValidationMessages hasError"/>
  <testcase name="ValidationMessages has should return true if contains form" time="0.001" classname="ValidationMessages has"/>
  <testcase name="ValidationMessages has should return false if does not contain form" time="0.001" classname="ValidationMessages has"/>
  <testcase name="DateFormatValidator should return null if value is valid date format with yyyyMMdd" time="0.002" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return invalid if value contains unsupported seperator" time="0.001" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return null if value is valid date format with MM/dd/yy HH:mm:ss.SSS" time="0.001" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return invalid if value does not contain any pattern" time="0.001" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return null if value is valid date format with dd.MM.yyyy-HH:mm:ss.SSS" time="0.001" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return invalid if control if value contains number" time="0" classname="DateFormatValidator"/>
  <testcase name="DateFormatValidator should return null if value is valid date format with dd.MM.yyyy" time="0" classname="DateFormatValidator"/>
  <system-out>
    <![CDATA[Chrome Headless 92.0.4515.159 (Mac OS 10.15.7) ERROR
  Disconnected Client disconnected from CONNECTED state (transport close)
,Chrome 92.0.4515.159 (Mac OS 10.15.7) ERROR
  Disconnected Client disconnected from CONNECTED state (transport close)

]]>
  </system-out>
  <system-err/>
</testsuite>